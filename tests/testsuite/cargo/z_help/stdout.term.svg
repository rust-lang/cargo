<svg width="1255px" height="884px" xmlns="http://www.w3.org/2000/svg">
  <style>
    .fg { fill: #AAAAAA }
    .bg { background: #000000 }
    .container {
      padding: 0 10px;
      line-height: 18px;
    }
    tspan {
      font: 14px SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;
      white-space: pre;
      line-height: 18px;
    }
  </style>

  <rect width="100%" height="100%" y="0" rx="4.5" class="bg" />

  <text xml:space="preserve" class="container fg">
    <tspan x="10px" y="28px"><tspan>Available unstable (nightly-only) flags:</tspan>
</tspan>
    <tspan x="10px" y="46px">
</tspan>
    <tspan x="10px" y="64px"><tspan>    -Z allow-features              Allow *only* the listed unstable features</tspan>
</tspan>
    <tspan x="10px" y="82px"><tspan>    -Z asymmetric-token            Allows authenticating with asymmetric tokens</tspan>
</tspan>
    <tspan x="10px" y="100px"><tspan>    -Z avoid-dev-deps              Avoid installing dev-dependencies if possible</tspan>
</tspan>
    <tspan x="10px" y="118px"><tspan>    -Z binary-dep-depinfo          Track changes to dependency artifacts</tspan>
</tspan>
    <tspan x="10px" y="136px"><tspan>    -Z bindeps                     Allow Cargo packages to depend on bin, cdylib, and staticlib crates, and use the artifacts built by those crates</tspan>
</tspan>
    <tspan x="10px" y="154px"><tspan>    -Z build-dir                   Enable the `build.build-dir` option in .cargo/config.toml file</tspan>
</tspan>
    <tspan x="10px" y="172px"><tspan>    -Z build-std                   Enable Cargo to compile the standard library itself as part of a crate graph compilation</tspan>
</tspan>
    <tspan x="10px" y="190px"><tspan>    -Z build-std-features          Configure features enabled for the standard library itself when building the standard library</tspan>
</tspan>
    <tspan x="10px" y="208px"><tspan>    -Z cargo-lints                 Enable the `[lints.cargo]` table</tspan>
</tspan>
    <tspan x="10px" y="226px"><tspan>    -Z check-target-cfgs           Enable unexpected cfgs checking in `[target.'cfg(...)']` tables</tspan>
</tspan>
    <tspan x="10px" y="244px"><tspan>    -Z checksum-freshness          Use a checksum to determine if output is fresh rather than filesystem mtime</tspan>
</tspan>
    <tspan x="10px" y="262px"><tspan>    -Z codegen-backend             Enable the `codegen-backend` option in profiles in .cargo/config.toml file</tspan>
</tspan>
    <tspan x="10px" y="280px"><tspan>    -Z config-include              Enable the `include` key in config files</tspan>
</tspan>
    <tspan x="10px" y="298px"><tspan>    -Z direct-minimal-versions     Resolve minimal dependency versions instead of maximum (direct dependencies only)</tspan>
</tspan>
    <tspan x="10px" y="316px"><tspan>    -Z dual-proc-macros            Build proc-macros for both the host and the target</tspan>
</tspan>
    <tspan x="10px" y="334px"><tspan>    -Z feature-unification         Enable new feature unification modes in workspaces</tspan>
</tspan>
    <tspan x="10px" y="352px"><tspan>    -Z fix-edition                 Permanently unstable edition migration helper</tspan>
</tspan>
    <tspan x="10px" y="370px"><tspan>    -Z gc                          Track cache usage and "garbage collect" unused files</tspan>
</tspan>
    <tspan x="10px" y="388px"><tspan>    -Z git                         Enable support for shallow git fetch operations</tspan>
</tspan>
    <tspan x="10px" y="406px"><tspan>    -Z gitoxide                    Use gitoxide for the given git interactions, or all of them if no argument is given</tspan>
</tspan>
    <tspan x="10px" y="424px"><tspan>    -Z host-config                 Enable the `[host]` section in the .cargo/config.toml file</tspan>
</tspan>
    <tspan x="10px" y="442px"><tspan>    -Z minimal-versions            Resolve minimal dependency versions instead of maximum</tspan>
</tspan>
    <tspan x="10px" y="460px"><tspan>    -Z msrv-policy                 Enable rust-version aware policy within cargo</tspan>
</tspan>
    <tspan x="10px" y="478px"><tspan>    -Z mtime-on-use                Configure Cargo to update the mtime of used files</tspan>
</tspan>
    <tspan x="10px" y="496px"><tspan>    -Z no-embed-metadata           Avoid embedding metadata in library artifacts</tspan>
</tspan>
    <tspan x="10px" y="514px"><tspan>    -Z no-index-update             Do not update the registry index even if the cache is outdated</tspan>
</tspan>
    <tspan x="10px" y="532px"><tspan>    -Z panic-abort-tests           Enable support to run tests with -Cpanic=abort</tspan>
</tspan>
    <tspan x="10px" y="550px"><tspan>    -Z profile-hint-mostly-unused  Enable the `hint-mostly-unused` setting in profiles to mark a crate as mostly unused.</tspan>
</tspan>
    <tspan x="10px" y="568px"><tspan>    -Z profile-rustflags           Enable the `rustflags` option in profiles in .cargo/config.toml file</tspan>
</tspan>
    <tspan x="10px" y="586px"><tspan>    -Z public-dependency           Respect a dependency's `public` field in Cargo.toml to control public/private dependencies</tspan>
</tspan>
    <tspan x="10px" y="604px"><tspan>    -Z publish-timeout             Enable the `publish.timeout` key in .cargo/config.toml file</tspan>
</tspan>
    <tspan x="10px" y="622px"><tspan>    -Z root-dir                    Set the root directory relative to which paths are printed (defaults to workspace root)</tspan>
</tspan>
    <tspan x="10px" y="640px"><tspan>    -Z rustdoc-depinfo             Use dep-info files in rustdoc rebuild detection</tspan>
</tspan>
    <tspan x="10px" y="658px"><tspan>    -Z rustdoc-map                 Allow passing external documentation mappings to rustdoc</tspan>
</tspan>
    <tspan x="10px" y="676px"><tspan>    -Z rustdoc-scrape-examples     Allows Rustdoc to scrape code examples from reverse-dependencies</tspan>
</tspan>
    <tspan x="10px" y="694px"><tspan>    -Z sbom                        Enable the `sbom` option in build config in .cargo/config.toml file</tspan>
</tspan>
    <tspan x="10px" y="712px"><tspan>    -Z script                      Enable support for single-file, `.rs` packages</tspan>
</tspan>
    <tspan x="10px" y="730px"><tspan>    -Z target-applies-to-host      Enable the `target-applies-to-host` key in the .cargo/config.toml file</tspan>
</tspan>
    <tspan x="10px" y="748px"><tspan>    -Z trim-paths                  Enable the `trim-paths` option in profiles</tspan>
</tspan>
    <tspan x="10px" y="766px"><tspan>    -Z unstable-options            Allow the usage of unstable options</tspan>
</tspan>
    <tspan x="10px" y="784px"><tspan>    -Z warnings                    Allow use of the build.warnings config key</tspan>
</tspan>
    <tspan x="10px" y="802px">
</tspan>
    <tspan x="10px" y="820px"><tspan>Run with `cargo -Z [FLAG] [COMMAND]`</tspan>
</tspan>
    <tspan x="10px" y="838px">
</tspan>
    <tspan x="10px" y="856px"><tspan>See https://doc.rust-lang.org/nightly/cargo/reference/unstable.html for more information about these flags.</tspan>
</tspan>
    <tspan x="10px" y="874px">
</tspan>
  </text>

</svg>
